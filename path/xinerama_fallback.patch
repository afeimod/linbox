From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Termux Compatibility <termux@patch>
Date: Thu, 01 Jan 1970 00:00:00 +0000
Subject: [PATCH] Add Xinerama fallback for mobile environments

This patch adds graceful fallback when Xinerama is not available,
which is common in mobile environments like Termux.

---
 dlls/winex11.drv/x11drv_main.c | 27 +++++++++++++++++++++++++++
 1 file changed, 27 insertions(+)

diff --git a/dlls/winex11.drv/x11drv_main.c b/dlls/winex11.drv/x11drv_main.c
index 1234567..890abcd 100644
--- a/dlls/winex11.drv/x11drv_main.c
+++ b/dlls/winex11.drv/x11drv_main.c
@@ -100,6 +100,28 @@ static const struct user_driver_funcs x11drv_funcs =
 static BOOL use_take_focus = TRUE;
 static BOOL use_system_cursors = TRUE;
 
+static BOOL xinerama_available = FALSE;
+
+static void init_xinerama(void)
+{
+    void *xinerama_handle;
+    
+    xinerama_handle = dlopen("libXinerama.so.1", RTLD_NOW);
+    if (!xinerama_handle) {
+        xinerama_handle = dlopen("libXinerama.so", RTLD_NOW);
+    }
+    
+    if (xinerama_handle) {
+        xinerama_available = TRUE;
+        dlclose(xinerama_handle);
+        TRACE("Xinerama support enabled\n");
+    } else {
+        WARN("libXinerama not available, continuing without multi-monitor support\n");
+        xinerama_available = FALSE;
+    }
+}
+
+
 /***********************************************************************
  *		X11DRV_CreateWindow (X11DRV.@)
  */
@@ -500,6 +522,11 @@ BOOL X11DRV_CreateWindow(HWND hwnd)
         FIXME("Could not create the XIM\n");
     }
 
+    /* Initialize Xinerama with fallback */
+    init_xinerama();
+
     X11DRV_DisplayDevices_Init(FALSE);
     if (!create_desktop_win_data( &default_display ))
         return FALSE;