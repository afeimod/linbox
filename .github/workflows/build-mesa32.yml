# build-mesa.yml
name: Build Mesa (aarch64 lib32)

on:
  workflow_dispatch:  # 只保留手动触发

permissions:
  contents: write  # 允许 GITHUB_TOKEN 创建 Release

jobs:
  build:
    runs-on: ubuntu-24.04-arm

    steps:
    - name: 检出源码
      uses: actions/checkout@v4

    - name: 安装完整的 ARM 工具链
      run: |
        sudo dpkg --add-architecture armhf
        sudo apt update
        # 安装完整的 ARM 工具链
        sudo apt-get install -y build-essential
        sudo apt-get install -y gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf
        sudo apt-get install -y binutils-arm-linux-gnueabihf
        # 安装32位ARM基础库
        sudo apt-get install -y libc6-dev-armhf-cross

    - name: 安装 Mesa 构建依赖 (32位)
      run: |
        # 安装32位开发库
        sudo apt-get install -y libdrm-dev:armhf \
                             libx11-dev:armhf \
                             libxext-dev:armhf \
                             libxfixes-dev:armhf \
                             libxxf86vm-dev:armhf \
                             libxcb1-dev:armhf \
                             libxcb-dri2-0-dev:armhf \
                             libxcb-dri3-dev:armhf \
                             libxcb-present-dev:armhf \
                             libxcb-sync-dev:armhf \
                             libxshmfence-dev:armhf \
                             libelf-dev:armhf \
                             libexpat1-dev:armhf \
                             libwayland-dev:armhf \
                             libwayland-egl-backend-dev:armhf \
                             meson \
                             ninja-build \
                             python3-pip \
                             pkg-config

    - name: 升级 Meson
      run: |
        pip3 install --upgrade meson

    - name: 克隆 Mesa
      run: |
        git clone https://gitlab.freedesktop.org/mesa/mesa.git
        cd mesa
        git checkout mesa-24.2.5  # 使用稳定版本

    - name: 创建交叉编译文件
      run: |
        cd mesa
        # 使用 echo 命令创建交叉编译文件
        echo "[binaries]" > cross-file.txt
        echo "c = 'arm-linux-gnueabihf-gcc'" >> cross-file.txt
        echo "cpp = 'arm-linux-gnueabihf-g++'" >> cross-file.txt
        echo "ar = 'arm-linux-gnueabihf-ar'" >> cross-file.txt
        echo "strip = 'arm-linux-gnueabihf-strip'" >> cross-file.txt
        echo "pkg-config = 'pkg-config'" >> cross-file.txt
        echo "" >> cross-file.txt
        echo "[properties]" >> cross-file.txt
        echo "needs_exe_wrapper = true" >> cross-file.txt
        echo "" >> cross-file.txt
        echo "[host_machine]" >> cross-file.txt
        echo "system = 'linux'" >> cross-file.txt
        echo "cpu_family = 'arm'" >> cross-file.txt
        echo "cpu = 'armv7hl'" >> cross-file.txt
        echo "endian = 'little'" >> cross-file.txt

    - name: 构建 Mesa (32位)
      run: |
        cd mesa
        
        # 创建目标目录
        sudo mkdir -p /data/data/com.termux/files/usr/glibc/lib
        sudo chown -R $USER:$USER /data/data/com.termux/files/usr/glibc
        
        mkdir -p builddir32
        
        # 设置环境变量
        export PKG_CONFIG_PATH="/usr/lib/arm-linux-gnueabihf/pkgconfig:$PKG_CONFIG_PATH"
        export PKG_CONFIG_LIBDIR="/usr/lib/arm-linux-gnueabihf/pkgconfig"
        
        # 使用 Meson 配置 - 修正选项以解决冲突
        meson setup builddir32 \
          --cross-file cross-file.txt \
          --libdir=lib \
          -Dprefix=/data/data/com.termux/files/usr/glibc \
          -Dbuildtype=release \
          -Db_lto=false \
          -Dplatforms=x11 \
          -Dglx=dri \
          -Dopengl=true \
          -Dgles1=enabled \
          -Dgles2=enabled \
          -Dglvnd=disabled \
          -Degl=disabled \
          -Dllvm=disabled \
          -Dshared-llvm=disabled \
          -Dshader-cache=enabled \
          -Dgallium-drivers=softpipe,llvmpipe \
          -Dvulkan-drivers= \
          -Dgbm=disabled

        ninja -C builddir32
        ninja -C builddir32 install

        VERSION=$(cat VERSION)
        echo "VERSION=$VERSION" >> $GITHUB_ENV

        # 打包32位库
        cd /data/data/com.termux/files/usr/glibc
        tar -czf /home/runner/work/linbox/linbox/mesa/termux-glibc-mesa-${VERSION}-armhf.tar.gz lib/
        cd /home/runner/work/linbox/linbox/mesa

    - name: 上传构建产物
      uses: actions/upload-artifact@v4
      with:
        name: termux-glibc-mesa-${{ env.VERSION }}-armhf
        path: mesa/termux-glibc-mesa-${{ env.VERSION }}-armhf.tar.gz

    - name: 发布到 GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: Mesa ${{ env.VERSION }} (armhf, Termux glibc)
        files: mesa/termux-glibc-mesa-${{ env.VERSION }}-armhf.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 输出版本信息
      run: |
        echo "✅ Mesa 32位构建完成"
        echo "版本号: $VERSION"
        echo "架构: armhf (32位ARM)"