# build-mesa.yml
name: Build Mesa (aarch64 lib32)

on:
  workflow_dispatch:  # 只保留手动触发

permissions:
  contents: write  # 允许 GITHUB_TOKEN 创建 Release

jobs:
  build:
    runs-on: ubuntu-24.04-arm

    steps:
    - name: 检出源码
      uses: actions/checkout@v4

    - name: 安装依赖
      run: |
        sudo sed -i "s/^Types: deb$/Types: deb deb-src/" /etc/apt/sources.list.d/ubuntu.sources
        sudo dpkg --add-architecture armhf
        sudo apt update
        sudo apt-get build-dep mesa -y
        # 安装32位ARM库和工具链
        sudo apt-get install gcc-arm-linux-gnueabihf g++-arm-linux-gnueabihf -y
        sudo apt-get install libdrm-dev:armhf libx11-dev:armhf libxext-dev:armhf libxdamage-dev:armhf \
                             libxfixes-dev:armhf libxxf86vm-dev:armhf libxcb-glx0-dev:armhf \
                             libxcb-dri2-0-dev:armhf libxcb-dri3-dev:armhf libxcb-present-dev:armhf \
                             libxshmfence-dev:armhf libelf-dev:armhf libexpat1-dev:armhf \
                             libwayland-dev:armhf libxrandr-dev:armhf libvdpau-dev:armhf \
                             libva-dev:armhf meson ninja-build -y

    - name: 克隆 Mesa
      run: |
        git clone https://gitlab.freedesktop.org/mesa/mesa.git
        cd mesa
        # 如果需要固定版本，可以取消下面注释
        # git checkout mesa-24.2.5

    - name: 创建交叉编译配置
      run: |
        cd mesa
        cat > cross-file.txt << EOF
[binaries]
c = 'arm-linux-gnueabihf-gcc'
cpp = 'arm-linux-gnueabihf-g++'
ar = 'arm-linux-gnueabihf-ar'
strip = 'arm-linux-gnueabihf-strip'
pkgconfig = 'pkg-config'

[properties]
c_args = ['-march=armv8-a']
cpp_args = ['-march=armv8-a']
c_link_args = []
cpp_link_args = []

[host_machine]
system = 'linux'
cpu_family = 'arm'
cpu = 'armv7hl'
endian = 'little'
EOF

    - name: 构建 Mesa (32位)
      run: |
        cd mesa
        sudo mkdir -p /data/data/com.termux/files/usr/glibc/lib
        sudo chmod 777 -R /data

        mkdir -p builddir32
        
        # 设置环境变量
        export PKG_CONFIG_PATH="/usr/lib/arm-linux-gnueabihf/pkgconfig:$PKG_CONFIG_PATH"
        export PKG_CONFIG_LIBDIR="/usr/lib/arm-linux-gnueabihf/pkgconfig"
        export CC="arm-linux-gnueabihf-gcc"
        export CXX="arm-linux-gnueabihf-g++"
        
        meson setup builddir32 \
          --cross-file cross-file.txt \
          --libdir=lib \
          -Dprefix=/data/data/com.termux/files/usr/glibc \
          -Dbuildtype=release \
          -Doptimization=3 \
          -Db_lto=false \
          -Dplatforms=x11 \
          -Degl-native-platform=x11 \
          -Dglx=dri \
          -Dglx-direct=true \
          -Dopengl=true \
          -Dgles1=enabled \
          -Dgles2=enabled \
          -Dglvnd=false \
          -Degl=enabled \
          -Dllvm=disabled \
          -Dshared-llvm=disabled \
          -Dshader-cache=enabled \
          -Dxlib-lease=enabled \
          -Dvulkan-beta=true \
          -Dgallium-drivers=zink,freedreno \
          -Dvulkan-drivers=freedreno \
          -Dfreedreno-kmds=msm,kgsl \
          -Dvideo-codecs=all \
          -Dgbm=enabled \
          -Dtools=drm-shim,freedreno

        ninja -C builddir32
        ninja -C builddir32 install

        VERSION=$(cat VERSION)
        echo "VERSION=$VERSION" >> $GITHUB_ENV

        # 打包32位库
        tar -czf termux-glibc-mesa-${VERSION}-armhf.tar.gz /data/data/com.termux/files/usr/glibc/lib
        mv termux-glibc-mesa-${VERSION}-armhf.tar.gz ..

    - name: 上传构建产物
      uses: actions/upload-artifact@v4
      with:
        name: termux-glibc-mesa-${{ env.VERSION }}-armhf
        path: termux-glibc-mesa-${{ env.VERSION }}-armhf.tar.gz

    - name: 发布到 GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: Mesa ${{ env.VERSION }} (armhf, Termux glibc)
        files: termux-glibc-mesa-${{ env.VERSION }}-armhf.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 输出版本信息
      run: |
        echo "✅ Mesa 32位构建完成"
        echo "版本号: $VERSION"
        echo "架构: armhf (32位ARM)"