# build-mesa.yml
name: Build Mesa (aarch64 lib32)

on:
  workflow_dispatch:  # 只保留手动触发

permissions:
  contents: write  # 允许 GITHUB_TOKEN 创建 Release

jobs:
  build:
    runs-on: ubuntu-24.04-arm

    steps:
    - name: 检出源码
      uses: actions/checkout@v4

    - name: 安装依赖
      run: |
        sudo sed -i "s/^Types: deb$/Types: deb deb-src/" /etc/apt/sources.list.d/ubuntu.sources
        sudo apt update
        sudo apt-get build-dep mesa -y
        # 安装32位构建依赖
        sudo apt-get install gcc-multilib g++-multilib -y
        sudo apt-get install libdrm-dev:i386 libx11-dev:i386 libxext-dev:i386 libxdamage-dev:i386 \
                             libxfixes-dev:i386 libxxf86vm-dev:i386 libxcb-glx0-dev:i386 \
                             libxcb-dri2-0-dev:i386 libxcb-dri3-dev:i386 libxcb-present-dev:i386 \
                             libxshmfence-dev:i386 libelf-dev:i386 libexpat1-dev:i386 \
                             libwayland-dev:i386 libxrandr-dev:i386 libvdpau-dev:i386 \
                             libva-dev:i386 -y

    - name: 克隆 Mesa
      run: |
        git clone https://gitlab.freedesktop.org/mesa/mesa.git
        cd mesa
        # 如果需要固定版本，可以取消下面注释
        # git checkout mesa-24.2.5

    - name: 构建 Mesa (32位)
      run: |
        cd mesa
        sudo mkdir -p /data/data/com.termux/files/usr/glibc/lib32
        sudo chmod 777 -R /data

        mkdir -p builddir32
        # 设置32位编译环境变量
        export CC="gcc -m32"
        export CXX="g++ -m32"
        export PKG_CONFIG_PATH="/usr/lib/i386-linux-gnu/pkgconfig:$PKG_CONFIG_PATH"
        export PKG_CONFIG_LIBDIR="/usr/lib/i386-linux-gnu/pkgconfig"
        
        meson setup builddir32 \
          --libdir=lib32 \
          -Dprefix=/data/data/com.termux/files/usr/glibc \
          -Dbuildtype=release \
          -Doptimization=3 \
          -Db_lto=false \
          -Dplatforms=x11 \
          -Degl-native-platform=x11 \
          -Dglx=dri \
          -Dglx-direct=true \
          -Dopengl=true \
          -Dgles1=enabled \
          -Dgles2=enabled \
          -Dglvnd=false \
          -Degl=enabled \
          -Dllvm=disabled \
          -Dshared-llvm=disabled \
          -Dshader-cache=enabled \
          -Dxlib-lease=enabled \
          -Dvulkan-beta=true \
          -Dgallium-drivers=zink,freedreno \
          -Dvulkan-drivers=freedreno \
          -Dfreedreno-kmds=msm,kgsl \
          -Dvideo-codecs=all \
          -Dgbm=enabled \
          -Dtools=drm-shim,freedreno \
          -Dc_args="-m32" \
          -Dcpp_args="-m32" \
          -Dc_link_args="-m32" \
          -Dcpp_link_args="-m32"

        ninja -C builddir32
        ninja -C builddir32 install

        VERSION=$(cat VERSION)
        echo "VERSION=$VERSION" >> $GITHUB_ENV

        # 打包32位库
        tar -czf termux-glibc-mesa-${VERSION}-aarch64-lib32.tar.gz /data/data/com.termux/files/usr/glibc/lib32
        mv termux-glibc-mesa-${VERSION}-aarch64-lib32.tar.gz ..

    - name: 上传构建产物
      uses: actions/upload-artifact@v4
      with:
        name: termux-glibc-mesa-${{ env.VERSION }}-aarch64-lib32
        path: termux-glibc-mesa-${{ env.VERSION }}-aarch64-lib32.tar.gz

    - name: 发布到 GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: Mesa ${{ env.VERSION }} (aarch64 lib32, Termux glibc)
        files: termux-glibc-mesa-${{ env.VERSION }}-aarch64-lib32.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 输出版本信息
      run: |
        echo "✅ Mesa 32位构建完成"
        echo "版本号: $VERSION"
        echo "架构: aarch64 lib32"