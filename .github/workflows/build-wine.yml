name: Build Wine (aarch64)

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - 'refs/tags/**'

permissions:
  contents: write  # 允许 GITHUB_TOKEN 创建 Release

jobs:
  build:
    runs-on: ubuntu-24.04-arm

    steps:
    - name: 检出源码
      uses: actions/checkout@v4

    - name: 安装依赖
      run: |
        sudo sed -i "s/^Types: deb$/Types: deb deb-src/" /etc/apt/sources.list.d/ubuntu.sources
        sudo apt update
        sudo apt-get install -y \
          build-essential \
          git \
          flex \
          bison \
          libx11-dev \
          libxext-dev \
          libxi-dev \
          libxrandr-dev \
          libxcursor-dev \
          libxcomposite-dev \
          libxdamage-dev \
          libxfixes-dev \
          libxxf86vm-dev \
          libxrender-dev \
          libxinerama-dev \
          libgl-dev \
          libglu-dev \
          libosmesa6-dev \
          libfreetype6-dev \
          libfontconfig1-dev \
          libpcap-dev \
          libdbus-1-dev \
          libssl-dev \
          libasound2-dev \
          libpulse-dev \
          libudev-dev \
          libvulkan-dev \
          libgcrypt20-dev \
          libgstreamer1.0-dev \
          libgstreamer-plugins-base1.0-dev \
          libcups2-dev \
          libjpeg-dev \
          libpng-dev \
          libtiff-dev \
          libmpg123-dev \
          libopenal-dev \
          libv4l-dev \
          libgphoto2-dev \
          liblcms2-dev \
          libldap2-dev \
          libxml2-dev \
          libxslt1-dev \
          libgnutls28-dev \
          libsane-dev \
          libpcsclite-dev \
          meson \
          ninja-build

    - name: 克隆 Wine
      run: |
        git clone https://gitlab.winehq.org/wine/wine.git
        cd wine
        # 如果需要固定版本，可以取消下面注释
        # git checkout wine-9.0

    - name: 配置和构建 Wine
      run: |
        cd wine
        sudo mkdir -p /data/data/com.termux/files/usr/glibc
        sudo chmod 777 -R /data

        # 创建构建目录
        mkdir -p build
        cd build

        # 配置 Wine
        ../configure \
          --prefix=/data/data/com.termux/files/usr/glibc \
          --enable-archs=aarch64 \
          --with-x \
          --with-vulkan \
          --with-opengl \
          --with-alsa \
          --with-pulse \
          --with-dbus \
          --with-cups \
          --with-sane \
          --with-gstreamer \
          --with-mpg123 \
          --with-openal

        # 构建 Wine
        make -j$(nproc)
        make install

        # 获取版本信息
        VERSION=$(git describe --tags --abbrev=0)
        echo "VERSION=$VERSION" >> $GITHUB_ENV

        # 打包
        cd ../..
        tar -czf termux-glibc-wine-${VERSION}-aarch64.tar.gz /data/data/com.termux/files/usr/glibc

    - name: 上传构建产物
      uses: actions/upload-artifact@v4
      with:
        name: termux-glibc-wine-${{ env.VERSION }}-aarch64
        path: termux-glibc-wine-${{ env.VERSION }}-aarch64.tar.gz

    - name: 发布到 GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: Wine ${{ env.VERSION }} (aarch64, Termux glibc)
        files: termux-glibc-wine-${{ env.VERSION }}-aarch64.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 输出版本信息
      run: |
        echo "✅ Wine 构建完成"
        echo "版本号: $VERSION"
        echo "安装路径: /data/data/com.termux/files/usr/glibc"